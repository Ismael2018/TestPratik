import { Proxy, ProxyProperties, Route } from './interfaces';
import { RouteManager } from './routes';
import { Middleware } from './types';
export declare class ProxyManager {
    private routeManager;
    private currentProxyIndex;
    private proxies;
    constructor(routeManager: RouteManager, proxies?: ProxyProperties[], basePath?: string);
    private getProxyNames;
    private getAllNamesWithDefault;
    private findByName;
    private resolveRouteProxyHandler;
    private isRouteProxyOverridenToDefault;
    private resolveGlobalProxyHandler;
    getAll(): Proxy[];
    getCurrent(): Proxy | null;
    getOverriddenProxyRoutes(): Route[];
    toggleCurrent(): void;
    chooseRouteProxy(): Promise<Route>;
    createRouteMiddleware(): Middleware;
    createGlobalMiddleware(): Middleware;
}
