import { Route, Method, MethodOverride, Request, ServerOptions } from './interfaces';
import { MethodAttribute, Middleware } from './types';
export declare function getRoutesPaths(routes: Route[]): string[];
export declare function formatMethodType(methodType: string): string;
export declare function findRouteByUrl(routes: Route[], url: string): Route;
export declare function findRouteMethodByType(methods: Method[], methodType: string): Method;
export declare function resolveMethodAttribute(attribute: MethodAttribute<any>, req: Request): any;
export declare class RouteManager {
    private routes;
    private globalOverrides?;
    constructor(globalOverrides?: MethodOverride[]);
    private findRouteByPath;
    private findRouteMethod;
    getAll(): Route[];
    setAll(routes: Route[]): void;
    addDocsRoute(basePath?: string, path?: string): void;
    createResolvedRouteMiddleware(options: ServerOptions): Middleware;
    createRouteMethodResponseMiddleware(options: ServerOptions): Middleware;
}
